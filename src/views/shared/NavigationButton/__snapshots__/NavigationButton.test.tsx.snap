// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavigationButton should render active 1`] = `
<View
  accessibilityLabel="navigation-button-earn"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "flex-start",
    }
  }
  testID="navigation-button-earn"
>
  <div
    duration={200}
    style={
      Array [
        Object {
          "alignItems": "center",
          "height": 75,
          "justifyContent": "center",
          "width": 75,
        },
        Object {
          "fill": "#0066CC",
        },
      ]
    }
    transition="opacity"
  >
    <View>
      <Text
        accessibilityLabel="icon-text"
        accessible={true}
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#0066CC",
              "fontSize": 26,
            },
            undefined,
            Object {
              "fontFamily": "sywmax",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
        testID="icon-text"
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 12,
              "marginTop": 8,
              "opacity": 0.5,
            },
            Object {
              "color": "#0066CC",
            },
          ],
        ]
      }
    >
      Earn
    </Text>
  </div>
</View>
`;

exports[`NavigationButton should render the 'earn' type 1`] = `
<View
  accessibilityLabel="navigation-button-earn"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "flex-start",
    }
  }
  testID="navigation-button-earn"
>
  <div
    duration={200}
    style={
      Array [
        Object {
          "alignItems": "center",
          "height": 75,
          "justifyContent": "center",
          "width": 75,
        },
        false,
      ]
    }
    transition="opacity"
  >
    <View>
      <Text
        accessibilityLabel="icon-text"
        accessible={true}
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 26,
            },
            undefined,
            Object {
              "fontFamily": "sywmax",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
        testID="icon-text"
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 12,
              "marginTop": 8,
              "opacity": 0.5,
            },
            false,
          ],
        ]
      }
    >
      Earn
    </Text>
  </div>
</View>
`;

exports[`NavigationButton should render the 'invalid' type 1`] = `null`;

exports[`NavigationButton should render the 'reward' type 1`] = `
<View
  accessibilityLabel="navigation-button-reward"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "flex-start",
    }
  }
  testID="navigation-button-reward"
>
  <div
    duration={200}
    style={
      Array [
        Object {
          "alignItems": "center",
          "height": 75,
          "justifyContent": "center",
          "width": 75,
        },
        false,
      ]
    }
    transition="opacity"
  >
    <View>
      <Text
        accessibilityLabel="icon-text"
        accessible={true}
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 26,
            },
            undefined,
            Object {
              "fontFamily": "sywmax",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
        testID="icon-text"
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 12,
              "marginTop": 8,
              "opacity": 0.5,
            },
            false,
          ],
        ]
      }
    >
      Rewards
    </Text>
  </div>
</View>
`;

exports[`NavigationButton should render the 'streak' type 1`] = `
<View
  accessibilityLabel="navigation-button-streak"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "flex-start",
    }
  }
  testID="navigation-button-streak"
>
  <div
    duration={200}
    style={
      Array [
        Object {
          "alignItems": "center",
          "height": 75,
          "justifyContent": "center",
          "width": 75,
        },
        false,
      ]
    }
    transition="opacity"
  >
    <View>
      <Text
        accessibilityLabel="icon-text"
        accessible={true}
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 26,
            },
            undefined,
            Object {
              "fontFamily": "sywmax",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
        testID="icon-text"
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 12,
              "marginTop": 8,
              "opacity": 0.5,
            },
            false,
          ],
        ]
      }
    >
      Missions
    </Text>
  </div>
</View>
`;

exports[`NavigationButton should render the 'wallet' type 1`] = `
<View
  accessibilityLabel="navigation-button-wallet"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "flex-start",
    }
  }
  testID="navigation-button-wallet"
>
  <div
    duration={200}
    style={
      Array [
        Object {
          "alignItems": "center",
          "height": 75,
          "justifyContent": "center",
          "width": 75,
        },
        false,
      ]
    }
    transition="opacity"
  >
    <View>
      <Text
        accessibilityLabel="icon-text"
        accessible={true}
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 26,
            },
            undefined,
            Object {
              "fontFamily": "sywmax",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
        testID="icon-text"
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Array [
            Object {
              "color": "#909BA0",
              "fontSize": 12,
              "marginTop": 8,
              "opacity": 0.5,
            },
            false,
          ],
        ]
      }
    >
      Wallet
    </Text>
  </div>
</View>
`;
