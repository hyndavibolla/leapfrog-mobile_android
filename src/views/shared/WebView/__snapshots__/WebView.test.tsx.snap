// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomWebView should render 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScript="true;"
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={true}
    onContentProcessDidTerminate={[Function]}
    onError={[Function]}
    onHttpError={[Function]}
    onLoad={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    setSupportMultipleWindows={false}
    sharedCookiesEnabled={true}
    source={
      Object {
        "uri": "https://test.com",
      }
    }
    startInLoadingState={false}
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    testID="webview"
    textInteractionEnabled={true}
    thirdPartyCookiesEnabled={true}
    useSharedProcessPool={true}
  />
</View>
`;

exports[`CustomWebView should render with a loader 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScript="true;"
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={true}
    onContentProcessDidTerminate={[Function]}
    onError={[Function]}
    onHttpError={[Function]}
    onLoad={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    setSupportMultipleWindows={false}
    sharedCookiesEnabled={true}
    source={
      Object {
        "uri": "https://test.com",
      }
    }
    startInLoadingState={true}
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    testID="webview"
    textInteractionEnabled={true}
    thirdPartyCookiesEnabled={true}
    useSharedProcessPool={true}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#F5F7FA",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
  >
    <div>
      Spinner
    </div>
  </View>
</View>
`;

exports[`CustomWebView should render with hideElements 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScript="document.querySelector('div').style.display = 'none';
document.querySelector('.class').style.display = 'none';
document.querySelector('#id').style.display = 'none';;true;"
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={true}
    onContentProcessDidTerminate={[Function]}
    onError={[Function]}
    onHttpError={[Function]}
    onLoad={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    setSupportMultipleWindows={false}
    sharedCookiesEnabled={true}
    source={
      Object {
        "uri": "https://test.com",
      }
    }
    startInLoadingState={false}
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    testID="webview"
    textInteractionEnabled={true}
    thirdPartyCookiesEnabled={true}
    useSharedProcessPool={true}
  />
</View>
`;

exports[`CustomWebView should render with no internet connection 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5F7FA",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
      "justifyContent": "center",
      "paddingBottom": 16,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 16,
    }
  }
>
  NoConnectionOrange
  <View
    style={
      Object {
        "alignItems": "center",
        "marginTop": 40,
      }
    }
  >
    <Text
      font="SFProDisplay-Bold"
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Bold",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Object {
            "fontSize": 20,
            "marginBottom": 8,
            "textAlign": "center",
          },
        ]
      }
    >
      Whoops!
    </Text>
    <Text
      font="SFProDisplay-Bold"
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Bold",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Object {
            "fontSize": 20,
            "marginBottom": 8,
            "textAlign": "center",
          },
        ]
      }
    >
      You don't have an internet connection
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#909BA0",
            "fontFamily": "SFProDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 22,
          },
          Object {
            "color": "#909BA0",
            "fontSize": 16,
            "textAlign": "center",
          },
        ]
      }
    >
      Check your internet settings and try again.
    </Text>
  </View>
</View>
`;
